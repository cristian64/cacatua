//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace WebCacatUA.servicioUploader {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UploaderSoap", Namespace="http://tempuri.org/")]
    public partial class Uploader : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback subirArchivoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ComprimirArchivoOperationCompleted;
        
        private System.Threading.SendOrPostCallback BorrarFicheroOperationCompleted;
        
        private System.Threading.SendOrPostCallback existeFicheroOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Uploader() {
            this.Url = global::WebCacatUA.Properties.Settings.Default.WebCacatUA_servicioUploader_Uploader;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event subirArchivoCompletedEventHandler subirArchivoCompleted;
        
        /// <remarks/>
        public event ComprimirArchivoCompletedEventHandler ComprimirArchivoCompleted;
        
        /// <remarks/>
        public event BorrarFicheroCompletedEventHandler BorrarFicheroCompleted;
        
        /// <remarks/>
        public event existeFicheroCompletedEventHandler existeFicheroCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/subirArchivo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string subirArchivo([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] datos, string nombreFichero) {
            object[] results = this.Invoke("subirArchivo", new object[] {
                        datos,
                        nombreFichero});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void subirArchivoAsync(byte[] datos, string nombreFichero) {
            this.subirArchivoAsync(datos, nombreFichero, null);
        }
        
        /// <remarks/>
        public void subirArchivoAsync(byte[] datos, string nombreFichero, object userState) {
            if ((this.subirArchivoOperationCompleted == null)) {
                this.subirArchivoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubirArchivoOperationCompleted);
            }
            this.InvokeAsync("subirArchivo", new object[] {
                        datos,
                        nombreFichero}, this.subirArchivoOperationCompleted, userState);
        }
        
        private void OnsubirArchivoOperationCompleted(object arg) {
            if ((this.subirArchivoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subirArchivoCompleted(this, new subirArchivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ComprimirArchivo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ComprimirArchivo(string ficheroComprimir, int id, string nombreFichero) {
            object[] results = this.Invoke("ComprimirArchivo", new object[] {
                        ficheroComprimir,
                        id,
                        nombreFichero});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ComprimirArchivoAsync(string ficheroComprimir, int id, string nombreFichero) {
            this.ComprimirArchivoAsync(ficheroComprimir, id, nombreFichero, null);
        }
        
        /// <remarks/>
        public void ComprimirArchivoAsync(string ficheroComprimir, int id, string nombreFichero, object userState) {
            if ((this.ComprimirArchivoOperationCompleted == null)) {
                this.ComprimirArchivoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnComprimirArchivoOperationCompleted);
            }
            this.InvokeAsync("ComprimirArchivo", new object[] {
                        ficheroComprimir,
                        id,
                        nombreFichero}, this.ComprimirArchivoOperationCompleted, userState);
        }
        
        private void OnComprimirArchivoOperationCompleted(object arg) {
            if ((this.ComprimirArchivoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ComprimirArchivoCompleted(this, new ComprimirArchivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BorrarFichero", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BorrarFichero(string nombreFichero) {
            object[] results = this.Invoke("BorrarFichero", new object[] {
                        nombreFichero});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BorrarFicheroAsync(string nombreFichero) {
            this.BorrarFicheroAsync(nombreFichero, null);
        }
        
        /// <remarks/>
        public void BorrarFicheroAsync(string nombreFichero, object userState) {
            if ((this.BorrarFicheroOperationCompleted == null)) {
                this.BorrarFicheroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBorrarFicheroOperationCompleted);
            }
            this.InvokeAsync("BorrarFichero", new object[] {
                        nombreFichero}, this.BorrarFicheroOperationCompleted, userState);
        }
        
        private void OnBorrarFicheroOperationCompleted(object arg) {
            if ((this.BorrarFicheroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BorrarFicheroCompleted(this, new BorrarFicheroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/existeFichero", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool existeFichero(string nombreFichero) {
            object[] results = this.Invoke("existeFichero", new object[] {
                        nombreFichero});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void existeFicheroAsync(string nombreFichero) {
            this.existeFicheroAsync(nombreFichero, null);
        }
        
        /// <remarks/>
        public void existeFicheroAsync(string nombreFichero, object userState) {
            if ((this.existeFicheroOperationCompleted == null)) {
                this.existeFicheroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexisteFicheroOperationCompleted);
            }
            this.InvokeAsync("existeFichero", new object[] {
                        nombreFichero}, this.existeFicheroOperationCompleted, userState);
        }
        
        private void OnexisteFicheroOperationCompleted(object arg) {
            if ((this.existeFicheroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.existeFicheroCompleted(this, new existeFicheroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void subirArchivoCompletedEventHandler(object sender, subirArchivoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class subirArchivoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal subirArchivoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ComprimirArchivoCompletedEventHandler(object sender, ComprimirArchivoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ComprimirArchivoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ComprimirArchivoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void BorrarFicheroCompletedEventHandler(object sender, BorrarFicheroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BorrarFicheroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BorrarFicheroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void existeFicheroCompletedEventHandler(object sender, existeFicheroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class existeFicheroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal existeFicheroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591